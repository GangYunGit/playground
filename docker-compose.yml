version: '3'

services:
  api-gateway:
    # build:
    #   context: ./spring-framework/api_gateway-service
    image: api-gateway-service
    container_name: api-gateway
    ports:
      # - "80:80"
      - "443:443"
    depends_on:
    # - mysql-server
    - redis


  oauth2-service:
    # build: 
    #   context: ./spring-framework/oauth_service
    image: oauth2-service
    container_name: playground-oauth2-service
    ports:
      - "9001:8080"
    depends_on:
    - mysql-server
    - redis

  user-service:
    # build: 
    #   context: ./spring-framework/user-service
    image: user-service
    container_name: user-service
    ports:
      - "9002:8080"
    depends_on:
    - mysql-server
    - redis

  matching-service:
    # build: 
    #   context: ./spring-framework/matching
    image: matching-service
    container_name: matching-service
    ports:
      - "9003:8080"
    depends_on:
    - mysql-server
    - redis

  notify-service:
    # build: 
    #   context: ./spring-framework/fcm-service
    image: notify-service
    container_name: notify-service
    ports:
      - "9004:8080"
    # depends_on:
    # - matching-service
    # - user-service



  # react-framework:
  #   build: 
  #     context: ./react-framework
  #   expose: 3000
  #   ports:
  #     - "3000:3000" # 접근 포트 설정 (컨테이너 외부:컨테이너 내부)  <- 컨테이너 내부는 무조건 3306

  mysql-server:
    image: mysql
    restart: always
    # container_name: mysql-servver # 컨테이너 이름 설정
    ports:
      - "3306:3306" # 접근 포트 설정 (컨테이너 외부:컨테이너 내부)  <- 컨테이너 내부는 무조건 3306
    environment: # -e 옵션
      - MYSQL_USER=ssafy
      - MYSQL_PASSWORD=ssafy
      - MYSQL_DATABASE=playground # default 생성 DB Schema

      - MYSQL_ROOT_PASSWORD=root
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./mysql-init-files/:/docker-entrypoint-initdb.d/
      - ./mysql/data:/var/lib/mysql
    expose:
      - '3306'

  redis:
    image: redis
    ports: 
      - "6380:6379"
  
